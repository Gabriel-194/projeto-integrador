-- Recomendo apagar o banco de dados antigo para começar com a nova estrutura limpa.
-- DROP DATABASE IF EXISTS essence_wear_db;

-- 1. CRIAÇÃO E USO DO BANCO DE DADOS
CREATE DATABASE IF NOT EXISTS essence_wear_db CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE essence_wear_db;

-- 2. TABELAS DE GERENCIAMENTO DE USUÁRIOS (CLIENTES)

-- Tabela principal de clientes/usuários
CREATE TABLE IF NOT EXISTS clientes (
    id INT(11) NOT NULL AUTO_INCREMENT,
    nome_completo VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,  -- 'UNIQUE' impede e-mails duplicados
    senha_hash VARCHAR(255) NOT NULL,   -- NUNCA guarde senhas em texto plano!
    cpf VARCHAR(14) UNIQUE,             -- Ex: '123.456.789-00'
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);

-- Tabela de endereços (um cliente pode ter vários)
CREATE TABLE IF NOT EXISTS enderecos (
    id INT(11) NOT NULL AUTO_INCREMENT,
    cliente_id INT(11) NOT NULL,
    logradouro VARCHAR(255) NOT NULL,
    numero VARCHAR(20) NOT NULL,
    complemento VARCHAR(100),
    bairro VARCHAR(100) NOT NULL,
    cidade VARCHAR(100) NOT NULL,
    estado CHAR(2) NOT NULL,
    cep VARCHAR(9) NOT NULL,            -- Ex: '12345-678'
    PRIMARY KEY (id),
    FOREIGN KEY (cliente_id) REFERENCES clientes(id) ON DELETE CASCADE
);

-- Tabela de telefones (um cliente pode ter vários)
CREATE TABLE IF NOT EXISTS telefones (
    id INT(11) NOT NULL AUTO_INCREMENT,
    cliente_id INT(11) NOT NULL,
    numero VARCHAR(20) NOT NULL,        -- Ex: '(41) 99999-8888'
    tipo ENUM('Celular', 'Fixo', 'Trabalho') DEFAULT 'Celular',
    PRIMARY KEY (id),
    FOREIGN KEY (cliente_id) REFERENCES clientes(id) ON DELETE CASCADE
);

-- 3. TABELAS DO CATÁLOGO DE PRODUTOS (ESTRUTURA MELHORADA)

-- Tabela dedicada para categorias
CREATE TABLE IF NOT EXISTS categorias (
    id INT(11) NOT NULL AUTO_INCREMENT,
    nome VARCHAR(100) NOT NULL UNIQUE,
    PRIMARY KEY (id)
);

-- Tabela de produtos, agora ligada a 'categorias'
CREATE TABLE IF NOT EXISTS produtos (
    id INT(11) NOT NULL AUTO_INCREMENT,
    nome VARCHAR(255) NOT NULL,
    descricao TEXT,
    preco DECIMAL(10, 2) NOT NULL,
    estoque INT(11) NOT NULL DEFAULT 0, -- Controle de estoque
    categoria_id INT(11),
    imagem_principal VARCHAR(255) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    FOREIGN KEY (categoria_id) REFERENCES categorias(id) ON DELETE SET NULL
);

-- 4. TABELAS DE GERENCIAMENTO DE PEDIDOS

-- Tabela principal de pedidos
CREATE TABLE IF NOT EXISTS pedidos (
    id INT(11) NOT NULL AUTO_INCREMENT,
    cliente_id INT(11) NOT NULL,
    endereco_entrega_id INT(11) NOT NULL,
    valor_total DECIMAL(10, 2) NOT NULL,
    status_pedido ENUM('Processando', 'Pagamento Aprovado', 'Em Separação', 'Enviado', 'Entregue', 'Cancelado') NOT NULL DEFAULT 'Processando',
    data_pedido TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    FOREIGN KEY (cliente_id) REFERENCES clientes(id),
    FOREIGN KEY (endereco_entrega_id) REFERENCES enderecos(id)
);

-- Tabela de itens do pedido (tabela de junção)
CREATE TABLE IF NOT EXISTS itens_pedido (
    id INT(11) NOT NULL AUTO_INCREMENT,
    pedido_id INT(11) NOT NULL,
    produto_id INT(11) NOT NULL,
    quantidade INT(11) NOT NULL,
    preco_unitario DECIMAL(10, 2) NOT NULL, -- Preço no momento da compra
    PRIMARY KEY (id),
    FOREIGN KEY (pedido_id) REFERENCES pedidos(id) ON DELETE CASCADE,
    FOREIGN KEY (produto_id) REFERENCES produtos(id)
);

-- Inserir as categorias na tabela 'categorias'
INSERT INTO `categorias` (`id`, `nome`) VALUES
(1, 'Blusas'),
(2, 'Casacos'),
(3, 'Camisetas'),
(4, 'Bermudas'),
(5, 'Calcas'),
(6, 'Tenis');